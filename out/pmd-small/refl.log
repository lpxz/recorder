Class.forName;java.security.MessageDigestSpi;java.security.Security.getSpiClass;640;;
Class.forName;java.util.CurrencyData;java.util.Currency$1.run;128;;
Class.forName;net.sourceforge.pmd.PMD;org.dacapo.harness.Pmd.<init>;32;;
Class.forName;org.apache.xerces.parsers.ObjectFactory;org.apache.xerces.parsers.ObjectFactory.class$;;;
Class.forName;org.dacapo.harness.Pmd;org.dacapo.harness.TestHarness.findClass;281;;
Class.forName;org.jaxen.saxpath.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.class$;139;;
Class.forName;org.jaxen.saxpath.base.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.createReader;137;;
Class.forName;org.jaxen.saxpath.helpers.XPathReaderFactory;org.jaxen.saxpath.helpers.XPathReaderFactory.class$;139;;
Class.forName;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1140;;
Class.forName;sun.security.provider.SHA;java.security.Provider$Service.getImplClass;1260;;
Class.newInstance;net.sourceforge.pmd.rules.DoubleCheckedLocking;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.OverrideBothEqualsAndHashcode;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.UnnecessaryConversionTemporary;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.UselessOperationOnImmutable;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.UselessOverridingMethod;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.XPathRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.basic.AvoidMultipleUnaryOperators;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.basic.AvoidUsingHardCodedIP;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.basic.AvoidUsingOctalValues;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.basic.BigIntegerInstantiation;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.basic.BooleanInstantiation;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.basic.BrokenNullCheck;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.basic.UnnecessaryReturn;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;309;;
Class.newInstance;org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl;org.apache.xerces.impl.dv.ObjectFactory.newInstance;;;
Class.newInstance;org.apache.xerces.jaxp.DocumentBuilderFactoryImpl;javax.xml.parsers.FactoryFinder.newInstance;;;
Class.newInstance;org.apache.xerces.parsers.XIncludeAwareParserConfiguration;org.apache.xerces.parsers.ObjectFactory.newInstance;;;
Class.newInstance;org.jaxen.saxpath.base.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.createReader;157;;
Class.newInstance;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1148;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$6fa76d2fd361585c5fe3433964828b14710d5895;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$bf67be7aa2fba0e0c4125f99f7ac27c22b632870;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor$HASHED$0fe886932b69b97b98f9625dd69006a3475e7188;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.security.provider.SHA;java.security.Provider$Service.newInstance;1221;;
Class.newInstance;sun.security.provider.Sun;sun.security.jca.ProviderConfig$3.run;240;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.util.resources.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2295;;
Constructor.newInstance;<net.sourceforge.pmd.rules.DoubleCheckedLocking: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.OverrideBothEqualsAndHashcode: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.UnnecessaryConversionTemporary: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.UselessOperationOnImmutable: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.UselessOverridingMethod: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.XPathRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.basic.AvoidMultipleUnaryOperators: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.basic.AvoidUsingHardCodedIP: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.basic.AvoidUsingOctalValues: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.basic.BigIntegerInstantiation: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.basic.BooleanInstantiation: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.basic.BrokenNullCheck: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.basic.UnnecessaryReturn: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.jaxp.DocumentBuilderFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.parsers.XIncludeAwareParserConfiguration: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.dacapo.harness.Pmd: void <init>(org.dacapo.parser.Config,java.io.File)>;org.dacapo.harness.TestHarness.runBenchmark;211;isAccessible=false;
Constructor.newInstance;<org.jaxen.saxpath.base.XPathReader: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$6fa76d2fd361585c5fe3433964828b14710d5895: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$bf67be7aa2fba0e0c4125f99f7ac27c22b632870: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor$HASHED$0fe886932b69b97b98f9625dd69006a3475e7188: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.SHA: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Field.get*;<java.util.CurrencyData: int[] otherCurrenciesDFD>;java.util.Currency$1.run;136;isAccessible=false;
Field.get*;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;java.util.Currency$1.run;134;isAccessible=false;
Field.get*;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;java.util.Currency$1.run;133;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String mainTable>;java.util.Currency$1.run;129;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String otherCurrencies>;java.util.Currency$1.run;135;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;java.util.Currency$1.run;132;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;java.util.Currency$1.run;131;isAccessible=false;
Field.get*;<java.util.CurrencyData: long[] scCutOverTimes>;java.util.Currency$1.run;130;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.PMD: void main(java.lang.String[])>;org.dacapo.harness.Pmd.iterate;58;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.ASTClassOrInterfaceDeclaration: boolean isInterface()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.SimpleJavaAccessNode: boolean isFinal()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.SimpleNode: java.lang.String getImage()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
